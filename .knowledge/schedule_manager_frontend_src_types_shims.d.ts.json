{"is_source_file": true, "format": "TypeScript declaration file (.d.ts)", "description": "This file contains minimal ambient type declarations (shims) to enable the Create React App (CRA) project to compile .tsx files without full @types packages in CI. It defines basic types for React, React DOM, and React Router modules, including core types, hooks, and components used in React applications.", "external_files": ["react", "react-dom/client", "react-router-dom"], "external_methods": ["react.createElement", "react.useState", "react.useEffect", "react.useRef", "react.useMemo", "react.useCallback", "react-dom/client.createRoot", "react-router-dom.BrowserRouter", "react-router-dom.Routes", "react-router-dom.Route", "react-router-dom.useNavigate"], "published": ["ReactNode", "ReactElement", "FC", "Fragment", "StrictMode", "createElement", "useState", "useEffect", "useRef", "useMemo", "useCallback", "SyntheticEvent", "MouseEvent", "ChangeEvent", "createRoot", "BrowserRouter", "Routes", "Route", "useNavigate"], "classes": [], "methods": [{"name": "export function createElement(...args: any[]): any; createElement", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export function useMemo<T = any>(factory: () => T, deps?: any[]): T; useMemo", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export function useNavigate(): (to: string | number) => void; useNavigate", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["react.createElement", "react.useState", "react.useEffect", "react.useRef", "react.useMemo", "react.useCallback", "react-dom/client.createRoot", "react-router-dom.BrowserRouter", "react-router-dom.Routes", "react-router-dom.Route", "react-router-dom.useNavigate"], "search-terms": ["TypeScript declaration", "ambient module", "CRA", "tsx", "type shims", "react", "react-dom", "react-router-dom", "@types"], "state": 2, "file_id": 33, "knowledge_revision": 137, "git_revision": "a9b112107f7b7a9734436920e0585a341bfd102b", "revision_history": [{"87": ""}, {"118": "f9bf1b8704a317ce6d469b8427faa0b8da4b0ed5"}, {"137": "a9b112107f7b7a9734436920e0585a341bfd102b"}], "ctags": [{"_type": "tag", "name": "BrowserRouter", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export const BrowserRouter: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ChangeEvent", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export interface ChangeEvent<T = any> extends SyntheticEvent<T, globalThis.Event> {}$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "FC", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export interface FC<P = {}> {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "Fragment", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export const Fragment: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "MouseEvent", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export interface MouseEvent<T = any> extends SyntheticEvent<T, globalThis.MouseEvent> {}$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "ReactElement", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export type ReactElement = any;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "ReactNode", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export type ReactNode = any;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Route", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export const Route: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "Routes", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export const Routes: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "StrictMode", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export const StrictMode: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createElement", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export function createElement(...args: any[]): any;$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createRoot", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  const createRoot: any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useMemo", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export function useMemo<T = any>(factory: () => T, deps?: any[]): T;$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useNavigate", "path": "/home/kavia/workspace/code-generation/surgical-schedule-management-system-1461-1485/schedule_manager_frontend/src/types/shims.d.ts", "pattern": "/^  export function useNavigate(): (to: string | number) => void;$/", "language": "TypeScript", "kind": "function"}], "hash": "42f7e543178fba969f3e2f10ffa7b6ff", "format-version": 4, "code-base-name": "schedule_manager_frontend", "filename": "schedule_manager_frontend/src/types/shims.d.ts", "fields": [{"name": "export interface ChangeEvent<T = any> extends SyntheticEvent<T, globalThis.Event> {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface FC<P = {}> {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface MouseEvent<T = any> extends SyntheticEvent<T, globalThis.MouseEvent> {}", "scope": "", "scopeKind": "", "description": "unavailable"}]}